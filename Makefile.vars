#!/usr/bin/make -f
# ---
# Makefile who contain all necessary variable
# ---
include Makefile.cfg


# ---
# Tools variables
# ---


MKDIR := mkdir
RM := rm -f


# ---
# Build variables
# ---


TARGET := x86_64-elf

CC := $(TARGET)-gcc
AS := nasm
AR := $(TARGET)-ar

# Default CWARN
CWARN := all extra no-address-of-packed-member
CWARN := $(CWARN:%=-W%)

# Adding more warn
CWARN += $(CMOREWARN)

# Default CFLAGS
CFLAGS := -c \
		$(if $(DEBUG),-g3 -DDEBUG,) $(if $(OPTIMIZE),-O2,) \
		-std=gnu17 \
		-fno-builtin \
		-fno-stack-protector \
		-mno-sse \
		-mno-red-zone \
		-mno-sse2 \
		-mno-sse3 \
		-mno-mmx \
		-mno-80387 \
		-fno-pic \
		-fomit-frame-pointer \
		-ffreestanding \
		-fstrict-volatile-bitfields \
		$(CWARN)
CFLAGS += $(CMOREFLAGS)

# Default LDFLAGS
LDFLAGS := -Wl,--build-id=none
LDFLAGS += $(LDMOREFLAGS)

# Default ASFLAGS
ASFLAGS := -felf64 $(if $(DEBUG),-F dwarf -g,)


# ---
# Folder variables
# ---


# Where are stored the binary files
BIN_DIR := ./bin

# Where are stored all object files
OBJ_DIR := ./build

# Kernel source code
K_SRC_DIR := ./kernel/src
K_INC_DIR := ./kernel/include
K_OBJ_DIR := $(OBJ_DIR)/kernel

# Libc (user space) source code
LIBC_SRC_DIR := ./libraries/libc/src
LIBC_INC_DIR := ./libraries/libc/include
LIBC_OBJ_DIR := $(OBJ_DIR)/libc


# ---
# Output and config files variables
# ---


# LD script
K_LDSCRIPT := ./kernel/link.ld

# Bootable image
BOOTABLE_IMG := bootable.img
UEFI_IMG := uefi.img

# Bin file
K_BIN := $(BIN_DIR)/kernel.elf


# ---
# Kernel variables
# ---


# C source files (Up to 3 sub directories)
K_SRCS_C := $(patsubst $(K_SRC_DIR)/%,%, \
		$(wildcard $(K_SRC_DIR)/*.c $(K_SRC_DIR)/**/*.c \
		$(K_SRC_DIR)/**/**/*.c $(K_SRC_DIR)/**/**/**/*.c))
K_OBJS_C := $(K_SRCS_C:%.c=$(K_OBJ_DIR)/%.c.o)
K_DEPS_C += $(K_SRCS_C:%.c=$(K_OBJ_DIR)/%.c.d)

# Preprocessor flags
K_PPFLAGS := -I$(K_INC_DIR) -D__KERNEL__

# C flags
K_CFLAGS := $(CFLAGS) $(K_PPFLAGS) -MMD -mcmodel=kernel -mno-red-zone

# ASM source files (Up to 3 sub directories)
K_SRCS_ASM := $(patsubst $(K_SRC_DIR)/%,%, \
		$(wildcard $(K_SRC_DIR)/*.S $(K_SRC_DIR)/**/*.S \
		$(K_SRC_DIR)/**/**/*.S $(K_SRC_DIR)/**/**/**/*.S))
# After C preprocessor file
K_PPSRCS_ASM := $(K_SRCS_ASM:%.S=$(K_OBJ_DIR)/%.s)
K_OBJS_ASM := $(K_PPSRCS_ASM:%.s=%.s.o)

# AS flags
K_ASFLAGS := $(ASFLAGS)

# AS Preprocessor flags
K_ASPPFLAGS := $(K_PPFLAGS) -D__ASM__

# LD flags
K_LDFLAGS := $(LDFLAGS) -T $(K_LDSCRIPT) -nostdlib  \
		-lgcc -static-libgcc \
		-z max-page-size=0x1000

# Regroup all files
K_OBJS := $(K_OBJS_C) $(K_OBJS_ASM)
K_DEPS := $(K_DEPS_C)
