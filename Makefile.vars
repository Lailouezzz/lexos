# ---
# Makefile who contain all necessary variable
# ---

# ---
# Tools variables
# ---

MKDIR := mkdir
RM := rm

# ---
# Build variables
# ---

TARGET := x86_64-elf

CC := $(TARGET)-gcc
AS := nasm
AR := $(TARGET)-ar

# Default CFLAGS

CWARN := all extra
CWARN := $(CWARN:%=-W%)

CFLAGS := -c -g3 -std=gnu18 \
		-fno-builtin \
		-fno-stack-protector \
		-mno-sse \
		-mno-red-zone \
		-mno-sse2 \
		-mno-sse3 \
		-mno-mmx \
		-mno-80387 \
		-fno-pic \
		-fomit-frame-pointer \
		-ffreestanding \
		-fstrict-volatile-bitfields

# Default LDFLAGS
LDFLAGS := -Wl,--build-id=none


# Default ASFLAGS
ASFLAGS := -felf64 -F dwarf -g


# ---
# Folder variables
# ---

# Where are stored the binary files
BIN_DIR := ./bin

# Where are stored all object files
OBJ_DIR := ./build

# Kernel source code
K_SRC_DIR := ./kernel/src
K_INC_DIR := ./kernel/include
K_OBJ_DIR := $(OBJ_DIR)/kernel

# Libc (user space) source code
LIBC_SRC_DIR := ./libraries/libc/src
LIBC_INC_DIR := ./libraries/libc/include
LIBC_OBJ_DIR := $(OBJ_DIR)/libc

# Libk (only for kernel) source code
LIBK_SRC_DIR := ./libraries/libk/src
LIBK_INC_DIR := ./libraries/libk/include
LIBK_OBJ_DIR := $(OBJ_DIR)/libk

# ---
# Files variables
# ---

# Bootable image
BOOTABLE_IMG := bootable.img

# ---
# Libk variables
# ---

# Library file
LIBK_A := $(BIN_DIR)/libk.a

# C source files
LIBK_SRCS_C := $(patsubst $(LIBK_SRC_DIR)/%,%, \
		$(wildcard $(LIBK_SRC_DIR)/*.c $(LIBK_SRC_DIR)/**/*.c))
LIBK_OBJS_C := $(LIBK_SRCS_C:%.c=$(LIBK_OBJ_DIR)/%.c.o)
LIBK_DEPS_C += $(LIBK_SRCS_C:%.c=$(LIBK_OBJ_DIR)/%.c.d)

# Preprocessor flags
LIBK_PPFLAGS := -I$(LIBK_INC_DIR) -D__KERNEL__

# C flags
LIBK_CFLAGS := $(CFLAGS) $(LIBK_PPFLAGS) -MMD -mcmodel=kernel -mno-red-zone

# ASM source files
LIBK_SRCS_ASM := $(patsubst $(LIBK_SRC_DIR)/%,%, \
		$(wildcard $(LIBK_SRC_DIR)/*.S $(LIBK_SRC_DIR)/**/*.S))
# After C preprocessor file
LIBK_PPSRCS_ASM := $(LIBK_SRCS_ASM:%.S=$(LIBK_OBJ_DIR)/%.s)
LIBK_OBJS_ASM := $(LIBK_PPSRCS_ASM:%.s=%.s.o)

# AS flags
LIBK_ASFLAGS := $(ASFLAGS)

# AS Preprocessor flags
LIBK_ASPPFLAGS := $(LIBK_PPFLAGS) -D__ASM__

# Regroup all files
LIBK_OBJS := $(LIBK_OBJS_C) $(LIBK_OBJS_ASM)
LIBK_DEPS := $(LIBK_DEPS_C)

# ---
# Kernel variables
# ---

# Bin file
K_BIN := $(BIN_DIR)/kernel.elf

# LD script
K_LDSCRIPT := ./kernel/link.ld

# C source files
K_SRCS_C := $(patsubst $(K_SRC_DIR)/%,%, \
		$(wildcard $(K_SRC_DIR)/*.c $(K_SRC_DIR)/**/*.c))
K_OBJS_C := $(K_SRCS_C:%.c=$(K_OBJ_DIR)/%.c.o)
K_DEPS_C += $(K_SRCS_C:%.c=$(K_OBJ_DIR)/%.c.d)

# Preprocessor flags
K_PPFLAGS := -I$(K_INC_DIR) -I$(LIBK_INC_DIR) -D__KERNEL__

# C flags
K_CFLAGS := $(CFLAGS) $(K_PPFLAGS) -MMD -mcmodel=kernel -mno-red-zone

# ASM source files
K_SRCS_ASM := $(patsubst $(K_SRC_DIR)/%,%, \
		$(wildcard $(K_SRC_DIR)/*.S $(K_SRC_DIR)/**/*.S))
# After C preprocessor file
K_PPSRCS_ASM := $(K_SRCS_ASM:%.S=$(K_OBJ_DIR)/%.s)
K_OBJS_ASM := $(K_PPSRCS_ASM:%.s=%.s.o)

# AS flags
K_ASFLAGS := $(ASFLAGS)

# AS Preprocessor flags
K_ASPPFLAGS := $(K_PPFLAGS) -D__ASM__

# LD flags
K_LDFLAGS := $(LDFLAGS) -T $(K_LDSCRIPT) -nostdlib -lgcc -static-libgcc \
		-z max-page-size=0x1000 -L"$(BIN_DIR)" -lk

# Regroup all files
K_OBJS := $(K_OBJS_C) $(K_OBJS_ASM)
K_DEPS := $(K_DEPS_C)
